output:
  - summary
pre-commit:
  parallel: true
  commands:
    tox:
      run: tox
    mypy:
      glob: "*.py"
      run: mypy {staged_files}
    black:
      glob: "*.py"
      run: black {staged_files}
      stage_fixed: true
    ruff:
      glob: "*.py"
      run: test $RUFF != "" && $RUFF check {staged_files} || ruff check  {staged_files}
      stage_fixed: true
    poetry-check:
      run: poetry check
    poetry-export:
      run: poetry export -f requirements.txt -o requirements.txt
      stage_fixed: true
    poetry-export-dev:
      run: poetry export --only=dev -f requirements.txt -o configs/dev/requirements.dev.txt
      stage_fixed: true
    shellcheck:
      glob: "*.sh"
      run: shellcheck {staged_files}
    codespell:
      glob: "*.py"
      run: codespell {staged_files}
    # pre-commit-hooks checks
    check-ast:
      glob: "*.py"
      run: check-ast {staged_files}
    check-yaml:
      glob: "*.ya?ml"
      run: check-yaml {staged_files}
    check-json:
      glob: "*.json"
      run: check-json {staged_files}
    check-toml:
      glob: "*.to?ml"
      run: check-toml {staged_files}
    pretty-format-json:
      glob: "*.json"
      run: pretty-format-json --autofix {staged_files}
      stage_fixed: true
    check-merge-conflict:
      run: check-merge-conflict {staged_files}
    check-added-large-files:
      exclude: tests/media/.+
      run: check-added-large-files {staged_files}
    detect-private-key:
      run: detect-private-key {staged_files}
    check-case-conflict:
      run: check-case-conflict {staged_files}
    check-symlinks:
      run: check-symlinks {staged_files}
    check-executables-have-shebangs:
      glob: "*.sh"
      run: check-executables-have-shebangs {staged_files}
    check-shebang-scripts-are-executable:
      glob: "*.sh"
      run: check-shebang-scripts-are-executable {staged_files}
    mixed-line-ending:
      run: mixed-line-ending -f auto {staged_files}
      stage_fixed: true
    trailing-whitespace:
      run: trailing-whitespace-fixer --markdown-linebreak-ext=md {staged_files} || echo "fixed whitespaces"
      stage_fixed: true
    end-of-file:
      exclude: requirements(.*)?.txt
      run: end-of-file-fixer {staged_files} || echo "fixed eof"
      stage_fixed: true
commit-msg:
  piped: true
  commands:
    commitizen:
      run: cat {1} | cz check
