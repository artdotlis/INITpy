[project]
classifiers = ["Private :: Do Not Upload"]
name = "initpy"
version = "0.6.0"
description = """Initial bare-bone monorepo Python project."""
readme = "README.md"
authors = [
      { name = "Artur Lissin", email = "artdotlis@pm.me" },
]
license = "Unlicense"
keywords = ["python", "skeleton"]
requires-python = ">=3.13,<4"

[tool.uv]
package = false
default-groups = ["mono"]

[tool.setuptools]
py-modules = []

[tool.uv.sources]
pkg1 = { workspace = true }
shared_utils = { workspace = true }

[tool.uv.workspace]
members = ["packages/*"]

[dependency-groups]
mono = [
  # local
  "shared_utils", "pkg1"
]
dev = [
    "commitizen ==4.9.1",
    "mypy ==1.18.2",
    "ruff ==0.13.1",
    "black ==25.9.0",
    "codespell ==2.4.1",
    "shellcheck-py ==0.11.0.1",
    "pre-commit-hooks ==6.0.0",
    "vulture ==2.14",
    # commit hooks
    "lefthook ==1.13.3"
]
test = [
    "coverage ==7.10.7",
    "pytest ==8.4.2",
    "tox ==4.30.2",
]
docs = [
  "mkdocs ==1.6.1",
  "mkdocs-material ==9.6.20",
  "mkdocstrings ==0.30.1",
  "mkdocstrings-python ==1.18.2",
]

[tool.black]
line-length = 90
target-version = ["py313"]

[tool.codespell]
count = ''
ignore-words = "configs/dev/ignore.txt"
quiet-level = 3
skip = '.mypy,.mypy_cache,.vscore,.tox,*~,*.cache,*.lock,venv,*ignore.txt'

[tool.commitizen]
major_version_zero = true
name = "cz_conventional_commits"
tag_format = "v$version"
update_changelog_on_bump = true
version_files = [
  "README.md:^\\[!\\[release:",
  "packages/pkg1/pyproject.toml",
  "packages/shared_utils/pyproject.toml"
]
version_provider = "uv"
version_type = "semver"

[tool.mypy]
allow_redefinition = false
# misc
allow_untyped_globals = false
check_untyped_defs = false
disallow_any_decorated = true
disallow_any_explicit = false
# any
disallow_any_expr = false
disallow_any_generics = true
disallow_any_unimported = false
disallow_incomplete_defs = true
disallow_subclassing_any = false
# functions
disallow_untyped_calls = true
disallow_untyped_decorators = true
disallow_untyped_defs = true
exclude = [
  "__pycache__",
  "\\.tox",
  "\\.mypy_cache",
  "venv"
]
ignore_missing_imports = true
implicit_reexport = true
local_partial_types = true
# none
no_implicit_optional = false
strict_equality = true
strict_optional = true
warn_no_return = true
# warn
warn_redundant_casts = true
warn_return_any = true
warn_unreachable = true
warn_unused_ignores = true

[tool.ruff]
line-length = 90
target-version = "py313"
exclude = [
  ".git",
  ".mypy_cache",
  ".ruff_cache",
  ".tox",
  ".venv",
  "__pypackages__",
  "__pycache__",
  "build",
  "dist",
  "venv"
]

[tool.ruff.lint]
# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"
fixable = ["A", "B", "C", "D", "E", "F", "G", "I", "N", "Q", "S", "T", "W", "ANN", "ARG", "BLE", "COM", "DJ", "DTZ", "EM", "ERA", "EXE", "FBT", "ICN", "INP", "ISC", "NPY", "PD", "PGH", "PIE", "PL", "PT", "PTH", "PYI", "RET", "RSE", "RUF", "SIM", "SLF", "TCH", "TID", "TRY", "UP", "YTT"]
ignore = ["TRY003", "N818"]
select = ["E", "F", "B", "C90", "S", "PT", "ARG", "PTH", "TRY", "RUF", "N"]
unfixable = []

[tool.ruff.lint.mccabe]
max-complexity = 11

[tool.ruff.lint.pylint]
max-args = 8

[tool.tox]
requires = ["tox>=4.23"]

[tool.tox.env_run_base]
allowlist_externals = ["coverage"]
set_env = { PYTHONPATH = "packages/pkg1/src:packages/shared_utils/src" }
commands = [
  [
    "coverage",
    "erase",
  ],
#  [
#    "coverage",
#    "run",
#    "--parallel-mode",
#    "-m",
#    "pytest",
#    "{posargs}",
#  ],
#  [
#    "coverage",
#    "combine",
#  ],
#  [
#    "coverage",
#    "report",
#  ],
]

[tool.coverage.run]
source = [
  "packages/pkg1/src/pkg1",
  "packages/shared_utils/src/shared_utils"
]
parallel = true

[tool.coverage.report]
show_missing = false
fail_under = 50

[tool.vulture]
exclude = []
ignore_decorators = ["@*",]
ignore_names = ["model_config", "formatwarning"]
make_whitelist = true
min_confidence = 60
paths = ["packages"]
sort_by_size = true
verbose = false
